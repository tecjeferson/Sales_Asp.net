@model List<aspnetapp.Models.Sales>

<div class="row">
  <div class="col text-center">
    <h2>Sales report</h2>
  </div>
</div>

<div class="row mt-5">
  <div class="col">
    <canvas id="canvas" style="min-with: 300px; height: 300px;"></canvas>
   <!-- <div id="container" style="min-with: 310px; height: 400px;"></div> -->
  </div>

  <div class="col">
     <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Salesperson</th>
                <th>Price</th>
                <th>Payment</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var sales in Model)
            {
                @if (sales.CustomerName != null)
                {
                <tr>
                    <td>@sales.Id</td>
                    
                    <td>@sales.Salesperson</td>
                    <td>@sales.Price</td>
                    @if (sales.hasPayment )
                    {
                        <td>Payed</td>
                    }
                    else 
                    {
                        <td>To be Payed</td>
                    } 
                </tr>
                } 
            }
        </tbody>    
    </table>
  </div>
</div>


<script>

 function loadChart(data){

var labels = data.map(function(e) {
   return e.salesperson;
});
var data = data.map(function(e) {
     return e.price;
});;



var ctx = canvas.getContext('2d');
var config = {
   type: 'pie',
   data: {
      labels: labels,
      datasets: [{
         label: 'pie',
         data: data,
         backgroundColor: [
        "#2ecc71",
        "#3498db",
        "#95a5a6",
        "#9b59b6",
        "#f1c40f",
        "#e74c3c",
        "#34495e"
      ],
      }]
      
   },
   options: {
    responsive: true,
    legend: {
      position: 'top',
    },
    title: {
      display: true,
      text: 'Sales %'
    },
    animation: {
      animateScale: true,
      animateRotate: true
    },
    tooltips: {
      callbacks: {
        label: function(tooltipItem, data) {
        	var dataset = data.datasets[tooltipItem.datasetIndex];
          var total = dataset.data.reduce(function(previousValue, currentValue, currentIndex, array) {
            return previousValue + currentValue;
          });
          var currentValue = dataset.data[tooltipItem.index];
          var percentage = Math.floor(((currentValue/total) * 100)+0.5);         
          return percentage + "%";
        }
      }
    }
  }

};
var chart = new Chart(ctx, config);

 }


  function loadData(){
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function(){
            if(this.readyState == 4 && this.status == 200){
                loadChart(JSON.parse(this.responseText));
            }
        }
        xhttp.open('GET','https://localhost:5001/api/Sales/', true);
        xhttp.send();
    }
    loadData();

</script>